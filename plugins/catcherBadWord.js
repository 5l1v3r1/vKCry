let vk;

let isINN = false,
	power = false,
	msgIDS = {},
	msgIDSmy = {};

Array.prototype.remove = function() {
    var what, a = arguments, L = a.length, ax;
    while (L && this.length) {
        what = a[--L];
        while ((ax = this.indexOf(what)) !== -1) {
            this.splice(ax, 1);
        }
    }
    return this;
};

function tryLoad() {
	if(_.izCapData.loaded) {
		isINN = _.izCapData.get("pl:catcherBadWord:isINN", isINN);
		power = _.izCapData.get("pl:catcherBadWord:power", power);
				
		_.con("User DATA Loaded [catcherBadWord]", "cyan");
	}
	else
		_.izCapData.addLoad(tryLoad)
}


var rl = _.setLine((line) => {
	switch(line.trim()) {
		case 'hh':
			_.ccon("-- catcherBadWord --", "red");
			_.ccon("swear	- set power catcher BadWords");
			break;
		case 'bad':
		case 'bw':
		case 'swear':
			_.rl.question("Power catcher BadWords. (Current state: O"+(power? "N": "FF")+") (y/n/other toggle) [toggle]: ", (data) => {
				power = (data == "y" || data == "Y")? true:
						(data == "n" || data == "N")? false:
						(data == "toggle" || data=="")? !power: power;
						
				_.con("catcherBadWord power: O"+(power? "N": "FF"));
				_.izCapData.set("pl:catcherBadWord:power", power).save(false, false);
			});
			break;
	}
});


module.exports = (_vk, _h) => {
	vk = _vk;
	let lp = _vk.updates;
	
	tryLoad();
	lp.on([ 'new_message' ], async (context, next)=> {
		const { id, isOutbox: outbox, hasText } = context;
		let { text } = context;
		
		// console.log(context);

		if(/*message.PTSSAVER || */!power)
			return;
		
		if (outbox && hasText) {
			if(text = makeItCultural(text)) {
				let data = await context.editMessage/*Text*/({
					message: text,
					keep_forward_messages: true,
					keep_snippets: true,
					attachment: context.attachments.join(",")
				});

				if(data == 1)
					msgIDSmy[id] = true;
				
				if(!isINN) {
					let res = false;
					try {
						res = await vk.api.messages.send({
							peer_id: _.UID,
							message: "No bad",
							attachment: "wall191039467_598"
						});
					} catch(e) { res = e; }
					console.log("is NN send: ", res);
					
					isINN = true;
					_.izCapData.set("pl:catcherBadWord:isINN", isINN);
				}
			}
		}

		await next();
	})
	.on([ 'edit_message' ], async (context, next)=> {
		const { id, isOutbox: outbox, hasText } = context;
		let { text } = context;

		if(/*message.PTSSAVER || */!power)
			return;

		if(msgIDSmy[id]) {
			delete msgIDSmy[id];
			return;
		}

		if (outbox && hasText && !msgIDS[id]) {
			if(text = makeItCultural(text) ) {
				await context.editMessage/*Text*/({
					message: text,
					keep_forward_messages: true,
					keep_snippets: true,
					attachment: context.attachments.join(",")
				});
				msgIDS[id] = true;

				let res = false;
				try {
					res = await vk.api.messages.send({
						peer_id: _.UID,
						message: "–¢–∞–≤–∞–π –∫—É–ª—å—Ç—É—Ä–Ω–µ–µ",
						attachment: "audio"+randomWord([
							"191039478_456239237", // –í–∏—Ç–∞—Å –û–ø–µ—Ä–∞ ‚Ññ2,
							"191039467_456239622", // Kush Kush Sweet & Bitter,
							"-147845620_456248576", // BOBI ANDONOV Faithful,
							"-147845620_456248577", // Ocean Park Standoff If You Were Mine
						])
					});
				} catch(e) { res = e; }
				console.log("is EDIT send: ", res);

			}
		}
		
		await next();
	})
};

function makeItCultural(text) {
	var textOld = text;

	text = text.replace(/—Ñ—ã–∞+/i, "—Ñ–∞–∞");

	// text = text.replace(/(\s|^|")—Ñ—ã(\s|)–∞+/i, randomWord(["fuu$1-$2"]));

	if(_.UID == 1) {
		text = text.replace(/([–ê-—è]+|)(2){1,3}([–ê-—è]+)/i, randomWord(["$1–º$3"]));
		text = text.replace(/([–ê-—è]+)(2){1,3}([–ê-—è]+|)/i, randomWord(["$1–º$3"]));

		text = text.replace(/([–ê-—è]+|)(1){1,3}([–ê-—è]+)/i, randomWord(["$1—Ç$3"]));
		text = text.replace(/([–ê-—è]+)(1){1,3}([–ê-—è]+|)/i, randomWord(["$1—Ç$3"]));
	}
	
	// text = text.replace(/(\s|^|"|¬´|\()(([a–∞–ø]+|)[x—Ö–∑–ø]+[a–∞–ø]+){4,10}/i, randomWord(["$1üò≠","$1üò≠ü§£", "$1ü§£"]));

	// text = text.replace(/–ë–ª—è+/g, "–§–∏–≥–∞");
	// text = text.replace(/–±–ª—è+/i, "—Ñ–∏–≥–∞");
	
	// text = text.replace(/^—Ö–∑$/i, "–Ω–µ –∑–Ω–∞—é");
	// text = text.replace(/^(–•–∑|–•–ó)$/g, "–ù–µ –∑–Ω–∞—é");

	// text = text.replace(/((\s|^)—Ö–∑(\s|$))/i, " –Ω–µ –∑–Ω–∞—é ");
	// text = text.replace(/((\s|^)(–•–ó|–•–∑)(\s|$))/g, " –ù–µ –∑–Ω–∞—é ");

	// text = text.replace(/((\s|^)—Ö–¥(\s|$))/i, "XD");

	// –•—É–π –∏ –µ–≥–æ –ø—Ä–æ–∏–∑–≤–æ–¥–Ω—ã–µ
	text = text.replace(/–•—É—è—Ä/g, "–§–∏–≥–∞—Ä");
	text = text.replace(/—Ö—É—è—Ä/i, "—Ñ–∏–≥–∞—Ä");
	text = text.replace(/–î–æ—Ö—É(—è|(–∏—â(–µ|–∏|)))/g, randomWord(["–ú–Ω–æ–≥–æ"/*, "–ì–æ—Ä–æ—É", "–ö—É—á–∞—É"*/]));
	text = text.replace(/–¥–æ—Ö—É(—è|(–∏—â(–µ|–∏|)))/i, randomWord(["–º–Ω–æ–≥–æ"/*, "–≥–æ—Ä–æ—É", "–∫—É—á–∞—É"*/]));
	text = text.replace(/(–ü–æ(\s|)—Ö—É(–π|—è|—è–º|—é)($|.|\s|,|\?|!)|–î–æ –ø–∏–∑–¥—ã)/g, randomWord(["–ù–µ–≤–∞–∂–Ω–æ$4", "–ò–Ω–¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ç–Ω–æ$4", "–ë–µ–∑—Ä–∞–∑–ª–∏—á–Ω–æ$4", "–í—Å—ë —Ä–∞–≤–Ω–æ$4"]));
	text = text.replace(/(–ø–æ(\s|)—Ö—É(–π|—è|—è–º|—é)($|.|\s|,|\?|!)|–¥–æ –ø–∏–∑–¥—ã)/i, randomWord(["–Ω–µ–≤–∞–∂–Ω–æ$4", "–∏–Ω–¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ç–Ω–æ$4", "–±–µ–∑—Ä–∞–∑–ª–∏—á–Ω–æ$4", "–≤—Å—ë —Ä–∞–≤–Ω–æ$4"]));
	text = text.replace(/(–ù–∞(\s|)—Ö—É(–π|—é)($|.|\s|,|\?|!)|(–í|–§)(\s|)–ø(–∏–∑|–µ—Å)–¥—É)/g, randomWord(["–ö —á—ë—Ä—Ç—É$4", "–ö —á–µ—Ä—Ç—è–º —Å–æ–±–∞—á—å–∏–º$4"]));
	text = text.replace(/(–Ω–∞(\s|)—Ö—É(–π|—é)($|.|\s|,|\?|!)|(–≤|—Ñ)(\s|)–ø(–∏–∑|–µ—Å)–¥—É)/i, randomWord(["–∫ —á—ë—Ä—Ç—É$4", "–∫ —á–µ—Ä—Ç—è–º —Å–æ–±–∞—á—å–∏–º$4"]));
	text = text.replace(/–ù–∞(\s|)—Ö—É—è($|.|\s|,|\?|!)/g, randomWord(["–ó–∞—á–µ–º$2", "–î–ª—è —á–µ–≥–æ$2", "–ù–∞—Ñ–∏–≥$2"]));
	text = text.replace(/–Ω–∞(\s|)—Ö—É—è($|.|\s|,|\?|!)/g, randomWord(["–ó–∞—á–µ–º$2", "–î–ª—è —á–µ–≥–æ$2", "–ù–∞—Ñ–∏–≥$2"]));
	text = text.replace(/–•—É(—ë|–µ)–≤(–∞—Å—Ç|)(–µ–Ω—å–∫|)(—ã(–π|—Ö|–µ|–º)|–æ(–µ|–≥–æ|–π|–º—É)|–∞—è|–∏–π)/g, "–ù–∏–∑–∫–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞");
	text = text.replace(/—Ö—É(—ë|–µ)–≤(–∞—Å—Ç|)(–µ–Ω—å–∫|)(—ã–π|–∞—è|–æ–µ|–æ–≥–æ|–æ–π|–∏–π|–æ–º—É|—ã—Ö|—ã–µ|—ã–º)/i, "–Ω–∏–∑–∫–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞");
	text = text.replace(/–•—É(—ë|–µ)–≤(–∞—Å—Ç|)(–µ–Ω—å–∫|)–æ/g, randomWord(["–ü–ª–æ—Ö–æ", "–ü–µ—á–∞–ª—å–Ω–æ", "–£–∂–∞—Å–Ω–æ", "–ö–æ—à–º–∞—Ä–Ω–æ", "–£–Ω—ã–ª–æ"]));
	text = text.replace(/—Ö—É(—ë|–µ)–≤(–∞—Å—Ç|)(–µ–Ω—å–∫|)–æ/i, randomWord(["–ø–ª–æ—Ö–æ", "–ø–µ—á–∞–ª—å–Ω–æ", "—É–∂–∞—Å–Ω–æ", "–∫–æ—à–º–∞—Ä–Ω–æ", "—É–Ω—ã–ª–æ"]));
	text = text.replace(/(–û|–ê)—Ö—É(–µ–Ω|(–µ—Ç|)–∏—Ç–µ–ª—å)–Ω/g, randomWord(["–ó–∞–º–µ—á–µ—Ç–µ–ª—å–Ω", "–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω", "–®–∏–∫–∞—Ä–Ω", "–û—Ç–ª–∏—á–Ω"]));
	text = text.replace(/(–æ|–∞)—Ö—É(–µ–Ω|(–µ—Ç|)–∏—Ç–µ–ª—å)–Ω/i, randomWord(["–∑–∞–º–µ—á–µ—Ç–µ–ª—å–Ω", "–ø—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω", "—à–∏–∫–∞—Ä–Ω", "$1—Ç–ª–∏—á–Ω"]));
	text = text.replace(/(–û|–ê|–ü—Ä–∏)—Ö—É–µ—Ç—å/g, "–° —É–º–∞ —Å–æ–π—Ç–∏");
	text = text.replace(/(–æ|–∞|–ø—Ä–∏)—Ö—É–µ—Ç—å/i, "—Å —É–º–∞ —Å–æ–π—Ç–∏");
	text = text.replace(/–ù(–∏|–µ)(\s|)—Ö—É–π/g, "–ù–µ—Ñ–∏–≥");
	text = text.replace(/–Ω(–∏|–µ)(\s|)—Ö—É–π/i, "–Ω–µ—Ñ–∏–≥");
	text = text.replace(/–ù(–∏|–µ)(\s|)—Ö—É—è/g, "–ù–∏ —Ñ–∏–≥–∞");
	text = text.replace(/–Ω(–∏|–µ)(\s|)—Ö—É—è/i, "–Ω–∏ —Ñ–∏–≥–∞");
	text = text.replace(/–ó–∞—Ö—É–π/g, randomWord(["–ó–∞—á–µ–º", "–ù–∞—Ñ–∏–≥"]));
	text = text.replace(/–∑–∞—Ö—É–π/i, randomWord(["–∑–∞—á–µ–º", "–Ω–∞—Ñ–∏–≥"]));
	text = text.replace(/–∑–∞—Ö—É—è—á–∏/g, randomWord(["–°–¥–µ–ª–∞", "–ó–∞—Ñ–∏–≥–∞—á–∏"]));
	text = text.replace(/–∑–∞—Ö—É—è—á–∏/i, randomWord(["—Å–¥–µ–ª–∞", "–∑–∞—Ñ–∏–≥–∞—á–∏"]));
	text = text.replace(/(–û|–ê|–ü—Ä–∏)—Ö—É–µ(–ª(–∞|)|—é|–µ—à—å|–≤–∞–µ(—à—å|—Ç–µ|—Ç))/g, randomWord(["–ù–µ –≤ —Å–µ–±–µ", "–í —à–æ–∫–µ"]));
	text = text.replace(/(–æ|–∞|–ø—Ä–∏)—Ö—É–µ(–ª(–∞|)|—é|–µ—à—å|–≤–∞–µ(—à—å|—Ç–µ|—Ç))/i, randomWord(["–Ω–µ –≤ —Å–µ–±–µ", "–≤ —à–æ–∫–µ"]));
	text = text.replace(/–•—É(–µ|–∏|–π)(–ø–ª(—ë|–µ)—Ç|–ª(–∞|–æ))/g, randomWord(["–î—É—Ä–∞–∫", "–ü–æ–¥–ª–µ—Ü"]));
	text = text.replace(/—Ö—É(–µ|–∏|–π)(–ø–ª(—ë|–µ)—Ç|–ª(–∞|–æ))/i, randomWord(["–¥—É—Ä–∞–∫", "–ø–æ–¥–ª–µ—Ü"]));
	text = text.replace(/–•—É(–µ|–∏)—Å–æ—Å/g, "–ì–æ–º–æ—Å–µ–∫—Å—É–∞–ª–∏—Å—Ç");
	text = text.replace(/—Ö—É(–µ|–∏)—Å–æ—Å/g, "–≥–æ–º–æ—Å–µ–∫—Å—É–∞–ª–∏—Å—Ç");
	text = text.replace(/–•—É–π–ª–æ/g, randomWord(["–õ–∂–µ—Ü", "–í—Ä—É–Ω", "–ë–æ–ª—Ç—É–Ω"]));
	text = text.replace(/—Ö—É–π–ª–æ/i, randomWord(["–ª–∂–µ—Ü", "–≤—Ä—É–Ω", "–±–æ–ª—Ç—É–Ω"]));
	text = text.replace(/–•—É–π–Ω—è/g, randomWord([/*"–®—Ç—É–∫–∞", "–í–µ—â—å"*/"–§–∏–≥–Ω—è", "–ï—Ä—É–Ω–¥–∞"]));
	text = text.replace(/—Ö—É–π–Ω—è/i, randomWord([/*"—à—Ç—É–∫–∞", "–≤–µ—â—å"*/"—Ñ–∏–≥–Ω—è", "–µ—Ä—É–Ω–¥–∞", "–≤–∑–¥–æ—Ä"]));
	text = text.replace(/–•—É–π–Ω–∏/g, randomWord([/*"–®—Ç—É–∫–∏", "–í–µ—â–∏"*/"–§–∏–≥–Ω–∏", "–ï—Ä—É–Ω–¥—ã"]));
	text = text.replace(/—Ö—É–π–Ω–∏/i, randomWord([/*"—à—Ç—É–∫–∏", "–≤–µ—â–∏"*/"—Ñ–∏–≥–Ω–∏", "–µ—Ä—É–Ω–¥—ã"]));
	text = text.replace(/–•—É–π–Ω–µ/g, randomWord([/*"–®—Ç—É–∫–µ", "–í–µ—â–∏"*/"–§–∏–≥–Ω–µ", "–ï—Ä—É–Ω–¥–µ"]));
	text = text.replace(/—Ö—É–π–Ω–µ/i, randomWord([/*"—à—Ç—É–∫–µ", "–≤–µ—â–∏"*/"—Ñ–∏–≥–Ω–µ", "–µ—Ä—É–Ω–¥–µ"]));
	text = text.replace(/–•—É–π–Ω—é/g, randomWord([/*"–®—Ç—É–∫—É", "–í–µ—â—å"*/"–§–∏–≥–Ω—é", "–ï—Ä—É–Ω–¥—É"]));
	text = text.replace(/—Ö—É–π–Ω—é/i, randomWord([/*"—à—Ç—É–∫—É", "–≤–µ—â—å"*/"—Ñ–∏–≥–Ω—é", "–µ—Ä—É–Ω–¥—É"]));
	text = text.replace(/(–•—É–π|–•–µ—Ä)–Ω(–µ|—ë)–π/g, randomWord([/*"–®—Ç—É–∫–æ–π", "–í–µ—â—å—é"*/"–ï—Ä—É–Ω–¥–æ–π", "–§–∏–≥–Ω–µ–π"]));
	text = text.replace(/(—Ö—É–π|—Ö–µ—Ä)–Ω(–µ|—ë)–π/i, randomWord([/*"—à—Ç—É–∫–æ–π", "–≤–µ—â—å—é"*/"–µ—Ä—É–Ω–¥–æ–π", "—Ñ–∏–≥–Ω–µ–π"]));
	text = text.replace(/(\s|^|"|¬´|\()(–•—É–π|–•–µ—Ä)/g, randomWord(["$1–§–∏–≥"/*"–ü–µ–Ω–∏—Å", "–ß–ª–µ–Ω", "–î–µ—Ç–æ—Ä–æ–¥–Ω—ã–π –æ—Ä–≥–∞–Ω"*/]));
	text = text.replace(/(\s|^|"|¬´|\()(–•—É—è|–•–µ—Ä–∞)/g, randomWord(["$1–§–∏–≥–∞"/*"–ü–µ–Ω–∏—Å–∞", "–ß–ª–µ–Ω–∞"*/])); //—Ç–∞–∫–∂–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç —Å "—Ö—É—è–º–∏"
	text = text.replace(/(\s|^|"|¬´|\()–•—É–∏/g, randomWord(["$1–ü–µ–Ω–∏—Å—ã", "$1–ß–ª–µ–Ω—ã", "$1–î–µ—Ç–æ—Ä–æ–¥–Ω—ã–µ –æ—Ä–≥–∞–Ω—ã"]));
	text = text.replace(/(\s|^|"|¬´|\()–•—É–µ/g, randomWord(["$1–ü–µ–Ω–∏—Å–µ", "$1–ß–ª–µ–Ω–µ", "$1–î–µ—Ç–æ—Ä–æ–¥–Ω–æ–º –æ—Ä–≥–∞–Ω–µ"]));
	text = text.replace(/(\s|^|"|¬´|\()–•—É—é/g, randomWord(["$1–ü–µ–Ω–∏—Å—É", "$1–ß–ª–µ–Ω—É", "$1–î–µ—Ç–æ—Ä–æ–¥–Ω–æ–º—É –æ—Ä–≥–∞–Ω"]));
	text = text.replace(/(\s|^|"|¬´|\()–•—É(–µ|—ë)–≤/g, randomWord(["$1–ü–µ–Ω–∏—Å–æ–≤", "$1–ß–ª–µ–Ω–æ–≤", "$1–î–µ—Ç–æ—Ä–æ–¥–Ω—ã—Ö –æ—Ä–≥–∞–Ω–æ–≤"]));
	text = text.replace(/(\s|^|"|¬´|\()–•—É–µ–º/g, randomWord(["$1–ü–µ–Ω–∏—Å–æ–º", "$1–ß–ª–µ–Ω–æ–º", "$1–î–µ—Ç–æ—Ä–æ–¥–Ω—ã–º –æ—Ä–≥–∞–Ω–æ–º"]));
	text = text.replace(/(\s|^|"|¬´|\()—Ö—É–π/i, randomWord(["$1—Ñ–∏–≥"/*"–ø–µ–Ω–∏—Å", "—á–ª–µ–Ω", "–¥–µ—Ç–æ—Ä–æ–¥–Ω—ã–π –æ—Ä–≥–∞–Ω"*/]));
	text = text.replace(/(\s|^|"|¬´|\()—Ö—É—è/i, randomWord(["$1—Ñ–∏–≥–∞"/*"–ø–µ–Ω–∏—Å–∞", "—á–ª–µ–Ω–∞"*/])); //—Ç–∞–∫–∂–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç —Å "—Ö—É—è–º–∏"
	text = text.replace(/(\s|^|"|¬´|\()—Ö—É–∏/i, randomWord(["$1–ø–µ–Ω–∏—Å—ã", "$1—á–ª–µ–Ω—ã", "$1–¥–µ—Ç–æ—Ä–æ–¥–Ω—ã–µ –æ—Ä–≥–∞–Ω—ã"]));
	text = text.replace(/(\s|^|"|¬´|\()—Ö—É–µ/i, randomWord(["$1–ø–µ–Ω–∏—Å–µ", "$1—á–ª–µ–Ω–µ", "$1–¥–µ—Ç–æ—Ä–æ–¥–Ω–æ–º –æ—Ä–≥–∞–Ω–µ"]));
	text = text.replace(/(\s|^|"|¬´|\()—Ö—É—é/i, randomWord(["$1–ø–µ–Ω–∏—Å—É", "$1—á–ª–µ–Ω—É", "$1–¥–µ—Ç–æ—Ä–æ–¥–Ω–æ–º—É –æ—Ä–≥–∞–Ω"]));
	text = text.replace(/(\s|^|"|¬´|\()—Ö—É(–µ|—ë)–≤/i, randomWord(["$1–ø–µ–Ω–∏—Å–æ–≤", "$1—á–ª–µ–Ω–æ–≤", "$1–¥–µ—Ç–æ—Ä–æ–¥–Ω—ã—Ö –æ—Ä–≥–∞–Ω–æ–≤"]));
	text = text.replace(/(\s|^|"|¬´|\()—Ö—É–µ–º/i, randomWord(["$1–ø–µ–Ω–∏—Å–æ–º", "$1—á–ª–µ–Ω–æ–º", "$1–¥–µ—Ç–æ—Ä–æ–¥–Ω—ã–º –æ—Ä–≥–∞–Ω–æ–º"]));

	// –ü–∏–∑–¥–∞ –∏ –µ—ë –ø—Ä–æ–∏–∑–≤–æ–¥–Ω—ã–µ
	text = text.replace(/–ü(–∏|–µ)–∑–¥–µ—Ü/g, randomWord(["–£–∂–∞—Å", "–ö–æ—à–º–∞—Ä"]));
	text = text.replace(/–ø(–∏|–µ)–∑–¥–µ—Ü/i, randomWord(["—É–∂–∞—Å", "–∫–æ—à–º–∞—Ä"]));
	text = text.replace(/–ü(–∏|–µ)–∑–¥(–æ|–∞)–±–æ–ª/g, randomWord(["–õ–∂–µ—Ü", "–í—Ä—É–Ω", "–ë–æ–ª—Ç—É–Ω"]));
	text = text.replace(/–ø(–∏|–µ)–∑–¥(–æ|–∞)–±–æ–ª/i, randomWord(["–ª–∂–µ—Ü", "–≤—Ä—É–Ω", "–±–æ–ª—Ç—É–Ω"]));
	text = text.replace(/–ü(–∏|–µ)–∑–¥(–µ|—ë)–∂/g, randomWord(["–õ–æ–∂—å", "–ù–µ–ø—Ä–∞–≤–¥–∞"]));
	text = text.replace(/–ø(–∏|–µ)–∑–¥(–µ|—ë)–∂/i, randomWord(["–ª–æ–∂—å", "–Ω–µ–ø—Ä–∞–≤–¥–∞"]));
	text = text.replace(/–ü(–∏|–µ)–∑–¥–µ—Ç—å/g, randomWord(["–í—Ä–∞—Ç—å", "–õ–≥–∞—Ç—å", "–ü—É—Å—Ç–æ—Å–ª–æ–≤–∏—Ç—å"]));
	text = text.replace(/–ø(–∏|–µ)–∑–¥–µ—Ç—å/i, randomWord(["–í—Ä–∞—Ç—å", "–õ–≥–∞—Ç—å", "–ü—É—Å—Ç–æ—Å–ª–æ–≤–∏—Ç—å"]));
	text = text.replace(/–ü(–∏|–µ)–∑–¥–∏—à—å/g, randomWord(["–í—Ä—ë—à—å", "–õ–∂—ë—à—å", "–ü—É—Å—Ç–æ—Å–ª–æ–≤–∏—à—å"]));
	text = text.replace(/–ø(–∏|–µ)–∑–¥–∏—à—å/i, randomWord(["–í—Ä—ë—à—å", "–õ–∂—ë—à—å", "–ü—É—Å—Ç–æ—Å–ª–æ–≤–∏—à—å"]));
	text = text.replace(/–û—Ç–ø–∏–∑–¥–∏$/g, randomWord([/*"–ò–∑–±–µ–π", "–ü–æ–±–µ–π"*/"–û—Ç—á–∏–∑–¥–∏", "–ü–æ–º–∞–ª—é–π"]));
	text = text.replace(/–æ—Ç–ø–∏–∑–¥–∏$/i, randomWord([/*"–∏–∑–±–µ–π", "–ø–æ–±–µ–π"*/"–æ—Ç—á–∏–∑–¥–∏", "–ø–æ–º–∞–ª—é–π"]));
	text = text.replace(/–û—Ç–ø–∏–∑–¥—è—Ç/g, randomWord([/*"–ò–∑–æ–±—å—é—Ç", "–ü–æ–±—å—é—Ç"*/"–û—Ç—ä–µ–∑–¥—è—Ç", "–û—Ç—á–∏–∑–¥—è—Ç"]));
	text = text.replace(/–æ—Ç–ø–∏–∑–¥—è—Ç/i, randomWord([/*"–∏–∑–æ–±—å—é—Ç", "–ø–æ–±—å—é—Ç"*/"–æ—Ç—ä–µ–∑–¥—è—Ç", "–æ—Ç—á–∏–∑–¥—è—Ç"]));
	text = text.replace(/–û—Ç–ø–∏–∑–¥/g, randomWord([/*"–ò–∑–±", "–ü–æ–±"*/"–û—Ç—ä–µ–∑–¥", "–û—Ç—á–∏–∑–¥"]));
	text = text.replace(/–æ—Ç–ø–∏–∑–¥/i, randomWord([/*"–∏–∑–±", "–ø–æ–±"*/"–æ—Ç—ä–µ–∑–¥", "–æ—Ç—á–∏–∑–¥"]));
	text = text.replace(/–û—Ç–ø–∏–∑–∂–µ–Ω(–Ω|)/g, randomWord(["–ò–∑–±–∏—Ç", "–ü–æ–±–∏—Ç"]));
	text = text.replace(/–æ—Ç–ø–∏–∑–∂–µ–Ω(–Ω|)/i, randomWord(["–∏–∑–±–∏—Ç", "–ø–æ–±–∏—Ç"]));
	text = text.replace(/–û—Ç–ø–∏–∑–∂—É/g, randomWord([/*"–ò–∑–æ–±—å—é", "–ü–æ–±—å—é"*/"–û—Ç—ä–µ–∑–∂—É", "–†–∞–∑—ä–µ–∂—É"]));
	text = text.replace(/–æ—Ç–ø–∏–∑–∂—É/i, randomWord([/*"–∏–∑–æ–±—å—é", "–ø–æ–±—å—é"*/"–æ—Ç—ä–µ–∑–∂—É", "—Ä–∞–∑—ä–µ–∂—É"]));
	text = text.replace(/–†–∞—Å–ø–∏–∑–¥—è/g, "–õ–µ–Ω—Ç—è");
	text = text.replace(/—Ä–∞—Å–ø–∏–∑–¥—è/i, "–ª–µ–Ω—Ç—è");
	text = text.replace(/–°–ø–∏–∑(–¥|–∂)/g, randomWord(["–°—Ç–∞—â", "–£—Ç–∞—â"]));
	text = text.replace(/—Å–ø–∏–∑(–¥|–∂)/i, randomWord(["—Å—Ç–∞—â", "—É—Ç–∞—â"]));
	text = text.replace(/–ü(–∏|–µ)–∑–¥–∞—Ç$/g, randomWord(["–ü—Ä–µ–∫—Ä–∞—Å–µ–Ω", "–í–µ–ª–∏–∫–æ–ª–µ–ø–µ–Ω", "–•–æ—Ä–æ—à"]));
	text = text.replace(/–ø(–∏|–µ)–∑–¥–∞—Ç$/i, randomWord(["–ø—Ä–µ–∫—Ä–∞—Å–µ–Ω", "–≤–µ–ª–∏–∫–æ–ª–µ–ø–µ–Ω", "—Ö–æ—Ä–æ—à"]));
	text = text.replace(/–ü(–∏|–µ)–∑–¥–∞—Ç/g, randomWord(["–ó–∞–º–µ—á–µ—Ç–µ–ª—å–Ω", "–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω", "–®–∏–∫–∞—Ä–Ω", "–û—Ç–ª–∏—á–Ω"]));
	text = text.replace(/–ø(–∏|–µ)–∑–¥–∞—Ç/i, randomWord(["–∑–∞–º–µ—á–µ—Ç–µ–ª—å–Ω", "–ø—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω", "—à–∏–∫–∞—Ä–Ω", "–æ—Ç–ª–∏—á–Ω"]));
	text = text.replace(/–ü(–∏|–µ)–∑–¥/g, "–í–∞–≥–∏–Ω");
	text = text.replace(/–ø(–∏|–µ)–∑–¥/i, "–≤–∞–≥–∏–Ω");

	// –ï–±–∞—Ç—å –∏ –ø—Ä–æ–∏–∑–≤–æ–¥–Ω—ã–µ
	text = text.replace(/–£–µ–±—É/g, randomWord(["–£—à–∞—Ç–∞—é"]));
	text = text.replace(/—É–µ–±—É/i, randomWord(["—É—à–∞—Ç–∞—é"]));
	text = text.replace(/–ï–±–∞—Ç—å—Å—è/g, randomWord(["–ó–∞–Ω–∏–º–∞—Ç—å—Å—è –ª—é–±–æ–≤—å—é", "–ó–∞–Ω–∏–º–∞—Ç—å—Å—è —Å–µ–∫—Å–æ–º"]));
	text = text.replace(/–µ–±–∞—Ç—å—Å—è/i, randomWord(["–∑–∞–Ω–∏–º–∞—Ç—å—Å—è –ª—é–±–æ–≤—å—é", "–∑–∞–Ω–∏–º–∞—Ç—å—Å—è —Å–µ–∫—Å–æ–º"]));
	text = text.replace(/–ï–±–∞–Ω—É—Ç—å—Å—è/g, randomWord(["–° —É–º–∞ —Å–æ–π—Ç–∏"]));
	text = text.replace(/–µ–±–∞–Ω—É—Ç—å—Å—è/i, randomWord(["—Å —É–º–∞ —Å–æ–π—Ç–∏"]));
	text = text.replace(/–ï–±–∞–Ω—É—Ç—Å—è/g, randomWord(["–° —É–º–∞ —Å–æ–π–¥—É—Ç"]));
	text = text.replace(/–µ–±–∞–Ω—É—Ç—Å—è/i, randomWord(["—Å —É–º–∞ —Å–æ–π–¥—É—Ç"]));
	text = text.replace(/(–ï–±–∞|(–Å|–ï)–±)–Ω—É–ª(—Å—è|–∏—Å—å|–∞—Å—å)/g, randomWord(["–ù–µ –≤ —Å–µ–±–µ", "–ï–±–æ–±–æ"]));
	text = text.replace(/(–µ–±–∞|(—ë|–µ)–±)–Ω—É–ª(—Å—è|–∏—Å—å|–∞—Å—å)/i, randomWord(["–Ω–µ –≤ —Å–µ–±–µ", "–µ–±–æ–±–æ"]));
	text = text.replace(/(–ó–∞–µ–±(–∏—Å—å|–æ–∫|–∞—Ç–æ|–æ–≤–æ)|–û—Ö—É–µ–Ω—á–∏–∫)/g, randomWord(["–•–æ—Ä–æ—à–æ", "–ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ", "–í–µ–ª–∏–∫–æ–ª–µ–ø–Ω–æ", "–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ", "–í–æ—Å—Ö–∏—Ç–∏—Ç–µ–ª—å–Ω–æ", "–û—Ç–ª–∏—á–Ω–æ", "–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ"]));
	text = text.replace(/(–∑–∞–µ–±(–∏—Å—å|–æ–∫|–∞—Ç–æ|–æ–≤–æ)|–æ—Ö—É–µ–Ω—á–∏–∫)/i, randomWord(["—Ö–æ—Ä–æ—à–æ", "–∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ", "–≤–µ–ª–∏–∫–æ–ª–µ–ø–Ω–æ", "–ø—Ä–µ–∫—Ä–∞—Å–Ω–æ", "–≤–æ—Å—Ö–∏—Ç–∏—Ç–µ–ª—å–Ω–æ", "–æ—Ç–ª–∏—á–Ω–æ", "–ø—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ"]));
	text = text.replace(/–ó–∞–µ–±–∞/g, randomWord(["–ù–∞–¥–æ–µ", "–î–æ—Å—Ç–∞"]));
	text = text.replace(/–∑–∞–µ–±–∞/i, randomWord(["–Ω–∞–¥–æ–µ", "–¥–æ—Å—Ç–∞"]));
	text = text.replace(/–ó–∞–µ–±–µ—Ç/g, randomWord(["–ù–∞–¥–æ–µ—Å—Ç", "–ó–∞–≥—Ä—ã–∑–µ—Ç"]));
	text = text.replace(/–∑–∞–µ–±–µ—Ç/i, randomWord(["–∑–∞–≥—Ä—ã–∑–µ—Ç", "–Ω–∞–¥–æ–µ—Å—Ç"]));
	text = text.replace(/–ï–±(–∞|–æ)–Ω—É/g, randomWord(["–≠–±–Ω—É"]));
	text = text.replace(/–µ–±(–∞|–æ)–Ω—É/i, randomWord(["—ç–±–Ω—É"]));
	text = text.replace(/–Ω(–µ|–∏)–≤(—ä|—å|)–µ–±–µ(–Ω+)–æ/i, randomWord(["–æ–ø—É–ø–µ–Ω–Ω–æ", "–æ—Ñ–∏–≥–µ–Ω–Ω–æ"]));
	text = text.replace(/–ù(–µ|–∏)–≤(—ä|—å|)–µ–±–µ(–Ω+)–æ/g, randomWord(["–û–ø—É–ø–µ–Ω–Ω–æ", "–û—Ñ–∏–≥–µ–Ω–Ω–æ"]));
	text = text.replace(/–ü—Ä–æ(–µ|—ë)–±–∞/g, "–ü–æ—Ç–µ—Ä—è");
	text = text.replace(/–ø—Ä–æ(–µ|—ë)–±–∞/i, "–ø–æ—Ç–µ—Ä—è");
	text = text.replace(/–ï–±–ª–∏–≤/g, randomWord(["–ì—Ä–µ–±–∞–Ω–Ω", "–î–æ–ª–±–∞–Ω–Ω"]));
	text = text.replace(/–µ–±–ª–∏–≤/i, randomWord(["–≥—Ä–µ–±–∞–Ω–Ω", "–¥–æ–ª–±–∞–Ω–Ω"]));
	text = text.replace(/–ù–∞–µ–±–Ω/g, "–°—Ç—É–∫–Ω");
	text = text.replace(/–Ω–∞–µ–±–Ω/i, "–°—Ç—É–∫–Ω");
	text = text.replace(/–ù–∞(–µ|—ë)–±–∞–Ω(–Ω|)/g, randomWord(["–û–±–º–∞–Ω—É—Ç"]));
	text = text.replace(/–Ω–∞(–µ|—ë)–±–∞–Ω(–Ω|)/i, randomWord(["–æ–±–º–∞–Ω—É—Ç"]));
	text = text.replace(/–ù–∞(–µ|—ë)–±–∞/g, randomWord(["–û–±–º–∞–Ω—É"]));
	text = text.replace(/–Ω–∞(–µ|—ë)–±–∞/i, randomWord(["–æ–±–º–∞–Ω—É"]));
	text = text.replace(/–ù–∞(–µ|—ë)–±/g, randomWord(["–û–±–º–∞–Ω"]));
	text = text.replace(/–Ω–∞(–µ|—ë)–±/i, randomWord(["–æ–±–º–∞–Ω"]));
	text = text.replace(/(–í—ã|–û—Ç(—ä|))–µ–±–∞/g, "–ü–æ–∏–º–µ");
	text = text.replace(/(–≤—ã|–æ—Ç(—ä|))–µ–±–∞/i, "–ø–æ–∏–º–µ");
	text = text.replace(/–û—Ç(—ä|)–µ–±–∏—Å—å/g, "–û—Ç—Å—Ç–∞–Ω—å");
	text = text.replace(/–æ—Ç(—ä|)–µ–±–∏—Å—å/i, "–æ—Ç—Å—Ç–∞–Ω—å");
	text = text.replace(/–û—Ç(—ä|)–µ–±–∏—Ç–µ—Å—å/g, "–û—Ç—Å—Ç–∞–Ω—å—Ç–µ");	
	text = text.replace(/–æ—Ç(—ä|)–µ–±–∏—Ç–µ—Å—å/g, "–æ—Ç—Å—Ç–∞–Ω—å—Ç–µ");
	text = text.replace(/–†–∞–∑—ä–µ–±–∞/g, randomWord(["–†–∞–∑—Ä—É—à–∏", "–£–Ω–∏—á—Ç–æ–∂–∏"]));
	text = text.replace(/—Ä–∞–∑—ä–µ–±–∞/i, randomWord(["—Ä–∞–∑—Ä—É—à–∏", "—É–Ω–∏—á—Ç–æ–∂–∏"]));
	text = text.replace(/–†–∞–∑—ä(–µ|—ë)–±—ã–≤–∞/g, randomWord(["–†–∞–∑—Ä—É—à–∞", "–£–Ω–∏—á—Ç–æ–∂–∞"]));
	text = text.replace(/—Ä–∞–∑—ä(–µ|—ë)–±—ã–≤–∞/i, randomWord(["—Ä–∞–∑—Ä—É—à–∞", "—É–Ω–∏—á—Ç–æ–∂–∞"]));
	text = text.replace(/((–î(–æ|–∞)–ª–±(–æ|–∞)|–£)((—ë|–µ)|–π–æ)(–±|–ø)(–∏–∫|–æ–∫|–∏—â(–µ|)|–∞–Ω|))/g, "–î—É—Ä–∞–∫");
	text = text.replace(/((–¥(–æ|–∞)–ª–±(–æ|–∞)|—É)((—ë|–µ)|–π–æ)(–±|–ø)(–∏–∫|–æ–∫|–∏—â(–µ|)|–∞–Ω|))/i, "–¥—É—Ä–∞–∫");
	text = text.replace(/(–í—ä|—É|–ü–µ—Ä–µ)–µ–±(–∞|–æ|–Ω—É)(—à–∏|)/g, randomWord(["–£–¥–∞—Ä–∏", "–°—Ç—É–∫–Ω—É"]));
	text = text.replace(/(–í—ä|—É|–ü–µ—Ä–µ)–µ–±(–∞|–æ|–Ω—É)(—à–∏|)/i, randomWord(["—É–¥–∞—Ä–∏", "—Å—Ç—É–∫–Ω—É"]));
	text = text.replace(/(–í—ä|—É)(–µ|—ë)–±/g, "–°—Ç—É–∫–Ω");
	text = text.replace(/(–≤—ä|—É)(–µ|—ë)–±/i, "—Å—Ç—É–∫–Ω");	
	text = text.replace(/–ï–±(–∞|)–ª(–æ|–∏—â–µ|–µ—Ç|—å–Ω–∏–∫)/g, "–õ–∏—Ü–æ");
	text = text.replace(/–µ–±(–∞|)–ª(–æ|–∏—â–µ|–µ—Ç|—å–Ω–∏–∫)/i, "–ª–∏—Ü–æ");
	text = text.replace(/(–ï|–Å)–±(–∞|)–ª(–∞|–∏—â–∞|–µ—Ç—ã|—å–Ω–∏–∫–∏)/g, "–õ–∏—Ü–∞");
	text = text.replace(/(\s)(–µ|—ë)–±(–∞|)–ª(–∞|–∏—â–∞|–µ—Ç—ã|—å–Ω–∏–∫–∏)/i, "$1–ª–∏—Ü–∞");
	// text = text.replace(/–ï–±–∞—à–∏—Ç—å/g, "$1–§–∏–≥–∞—á–∏—Ç—å");
	text = text.replace(/(\s|^|"|¬´|\()(–ï|–Å)–±–∞—à/g, randomWord([/*"$1–°–Ω–æ—à–∞",*/ "$1–§–∏–≥–∞—á"]));
	text = text.replace(/(\s|^|"|¬´|\()(–µ|—ë)–±–∞—à/i, randomWord([/*"$1c–Ω–æ—à–∞",*/ "$1—Ñ–∏–≥–∞—á"]));
	text = text.replace(/(\s|^|"|¬´|\()(–ï|–Å)–±–∞/g, randomWord([/*"$1–°–Ω–æ—à–∞",*/ "$1–§–∏–≥–∞"]));
	text = text.replace(/(\s|^|"|¬´|\()(–µ|—ë)–±–∞/i, randomWord([/*"$1c–Ω–æ—à–∞",*/ "$1—Ñ–∏–≥–∞"]));
	text = text.replace(/(\s|^|"|¬´|\()–ï–±(–µ|—ë)/g, "$1–°–Ω–æ—à–∞–µ");
	text = text.replace(/(\s|^|"|¬´|\()–µ–±(–µ|—ë)/i, "$1—Å–Ω–æ—à–∞–µ");

	//–ü—Ä–æ—á–∏–µ
	text = text.replace(/(\s|^|"|¬´|\()–ü–∏–¥(–æ|–∞)—Ä(–∞—Å|–æ–∫|)/g, randomWord(["$1–ì–µ–π", "$1–ì–æ–º–æ—Å–µ–∫—Å—É–∞–ª–∏—Å—Ç"]));
	text = text.replace(/(\s|^|"|¬´|\()–ø–∏–¥(–æ|–∞)—Ä(–∞—Å|–æ–∫|)/i, randomWord(["$1–≥–µ–π", "$1–≥–æ–º–æ—Å–µ–∫—Å—É–∞–ª–∏—Å—Ç"]));
	text = text.replace(/(\s|^|"|¬´|\()–ú—É–¥(–∞(—á(–æ|—ë|–∏)|)–∫|–∏–ª(–∞|–æ)|–æ–∑–≤–æ–Ω)/g, "$1–ü–æ–¥–ª–µ—Ü");
	text = text.replace(/(\s|^|"|¬´|\()–º—É–¥(–∞(—á(–æ|—ë|–∏)|)–∫|–∏–ª(–∞|–æ)|–æ–∑–≤–æ–Ω)/i, "$1–ø–æ–¥–ª–µ—Ü");
	text = text.replace(/(\s|^|"|¬´|\()–ì–æ–≤–Ω/g, "$1–î–µ—Ä—å–º");
	text = text.replace(/(\s|^|"|¬´|\()–≥–æ–≤–Ω/i, "$1–¥–µ—Ä—å–º");
	text = text.replace(/(\s|^|"|¬´|\()–ì–æ–≤(–µ|—ë)(–Ω–Ω|–Ω)/g, "$1–î–µ—Ä—å–º–æ–≤");
	text = text.replace(/(\s|^|"|¬´|\()–≥–æ–≤(–µ|—ë)(–Ω–Ω|–Ω)/i, "$1–¥–µ—Ä—å–º–æ–≤");
	text = text.replace(/(\s|^|"|¬´|\()–ë–ª—è(–¥|—Ç)—å/g, randomWord(["$1–®–ª—é—Ö–∞", "$1–ü—Ä–æ—Å—Ç–∏—Ç—É—Ç–∫–∞", "$1–ü—Ä–æ—Ñ—É—Ä—Å–µ—Ç–∫–∞", "$1–ì—É–ª—è—â–∞—è –∂–µ–Ω—â–∏–Ω–∞"]));
	text = text.replace(/(\s|^|"|¬´|\()–±–ª—è(–¥|—Ç)—å/i, randomWord(["$1—à–ª—é—Ö–∞", "$1–ø—Ä–æ—Å—Ç–∏—Ç—É—Ç–∫–∞", "$1–ø—Ä–æ—Ñ—É—Ä—Å–µ—Ç–∫–∞", "$1–≥—É–ª—è—â–∞—è –∂–µ–Ω—â–∏–Ω–∞"]));
	text = text.replace(/–ì(–∞|–æ)–Ω–¥–æ–Ω/g, randomWord(["–ü—Ä–µ–∑–µ—Ä–≤–∞—Ç–∏–≤", "–ö–æ–Ω—Ç—Ä–∞—Ü–µ–ø—Ç–∏–≤"]));
	text = text.replace(/–≥(–∞|–æ)–Ω–¥–æ–Ω/g, randomWord(["–ø—Ä–µ–∑–µ—Ä–≤–∞—Ç–∏–≤", "–∫–æ–Ω—Ç—Ä–∞—Ü–µ–ø—Ç–∏–≤"]));
	text = text.replace(/(\s|^|"|¬´|\()–ü(–µ|–∏)–∑–¥—é(–∫|–≥|—á–∫–∞)/g, randomWord(["$1—Å–∫–∞—Ç–∏–Ω–∫–∞", "$1—Ç–≤–∞—Ä—å–∫–∞"]));
	text = text.replace(/(\s|^|"|¬´|\()–ø(–µ|–∏)–∑–¥—é(–∫|–≥|—á–∫–∞)/i, randomWord(["$1—Å–∫–∞—Ç–∏–Ω–∫–∞", "$1—Ç–≤–∞—Ä—å–∫–∞"]));

	// text = text.replace(/–ë–ª—è(\s|^|"|,|!|\?|.|)/g, randomWord(["–ß—ë—Ä—Ç –ø–æ–¥–µ—Ä–∏$1", "–ì–æ—Å–ø–æ–¥–∏$1", "–§–∏–≥–∞$1", "M–ª—è$1"]));
	text = text.replace(/–ë–ª—è(\s|^|"|,|!|\?|.|)/g, randomWord(["–ë–ª–µ–∞–Ω—á$1", "–ü–ª–µ–∞–Ω$1", "–ë–ª–æ–æ$1", "M–ª—è$1"]));
	text = text.replace(/(\s|^|"|¬´|\()–±–ª—è+(\s|^|"|,|!|\?|.|)/i, randomWord(["$1–±–ª–µ–∞–Ω—á$2", "$1–≥–æ—Å–ø–æ–¥–∏$2", "$1–±–ª–æ–æ$2", "$1–º–ª—è$2"]));

	// zzhhhhh
	// text = text.replace(/([–ê-—è]+\s)/g, randomWord(["&#8207;$1&#8207;&#8206;&#8207;&#8207;"]));

	/*var csp = text.split(" ").length - 1;
	if(_.rnd(1, 9) > 5 && csp > 6 && csp < 30)
		for (var i = 0; i < 20; i++)
			text += "&#8207;";*/

	var textTry;
	if(textOld != text) {
		if(textTry = makeItCultural(text))
			text = textTry;
	}

	return (textOld != text)? text: false;
}

function randomWord(words) {
	return words[Math.floor(Math.random() * words.length)];
}